apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName myapiSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            // SDK Security header name for development
            buildConfigField 'String', "SdkSecurityHeaderName", MyapiSdkSecurityKeyHeaderName
            resValue 'string', "sdk_security_header_name", MyapiSdkSecurityKeyHeaderName

            // SDK Security header value for development
            buildConfigField 'String', "SdkSecurityHeaderValue", MyapiSdkSecurityKeyHeaderValue
            resValue 'string', "sdk_security_header_value", MyapiSdkSecurityKeyHeaderValue

            // SDK Api Key header name for development
            buildConfigField 'String', "SdkApiKeyHeaderName", MyapiSdkApiKeyHeaderName
            resValue 'string', "sdk_api_key_header_name", MyapiSdkApiKeyHeaderName
        }
        release {
            // SDK Security header name for production
            buildConfigField 'String', "SdkSecurityHeaderName", MyapiSdkSecurityKeyHeaderName
            resValue 'string', "sdk_security_header_name", MyapiSdkSecurityKeyHeaderName

            // SDK Security header value for production
            buildConfigField 'String', "SdkSecurityHeaderValue", MyapiSdkSecurityKeyHeaderValue
            resValue 'string', "sdk_security_header_value", MyapiSdkSecurityKeyHeaderValue

            // SDK Api Key header name for production
            buildConfigField 'String', "SdkApiKeyHeaderName", MyapiSdkApiKeyHeaderName
            resValue 'string', "sdk_api_key_header_name", MyapiSdkApiKeyHeaderName

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
//            jniDebuggable false
//            zipAlignEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    implementation "com.android.support:appcompat-v7:$support_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2_version"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'

    // RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.4.0"

    // Retrofit GSON Converter for JSON translations
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"

    // Retrofit RxJava2 Adapter
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

    // OKHttpClient
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:3.0.1"

    // OkHttp interceptors for logging
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.0"

    // JUnit
    testImplementation 'junit:junit:4.12'

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.18.3'

    // OKHttp MockWebServer
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'

    // Integration tests
    androidTestImplementation "com.android.support:support-annotations:$support_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
}
